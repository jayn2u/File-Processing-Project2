name: Project2 CI

on:
  push:
    branches: [ main, rethink ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Compile ftlmgr
        run: gcc -std=c11 -Wall -Wextra -o a.out ftlmgr.c fdevicedriver.c

      - name: Test create flash file
        run: |
          ./a.out c flashmemory 2
          test -f flashmemory || (echo "Flash file not created" && exit 1)
          expected=$((2*8*(512+16)))
          actual=$(stat -c%s flashmemory)
          [ "$actual" -eq "$expected" ] || (echo "Size mismatch: expected $expected, got $actual" && exit 1)

      - name: Test case 1 write hello read 100
        run: |
          # Test case 1: ppn 1, sector data "hello", spare data "100"
          ./a.out w flashmemory 1 "hello" "100"
          output=$(./a.out r flashmemory 1)
          expected="hello 100"
          if [ "$output" != "$expected" ]; then
          echo "Test case 1 failed: expected '$expected', got '$output'"
          exit 1
          fi

      - name: Test case 2 write abcde read 0
        run: |
          ./a.out w flashmemory 2 "abcde" "0"
          output=$(./a.out r flashmemory 2)
          expected="abcde 0"
          if [ "$output" != "$expected" ]; then
            echo "Test case 2 failed: expected '$expected', got '$output'"
            exit 1
          fi

      - name: Test case 3 write data read 999
        run: |
          ./a.out w flashmemory 3 "data" "999"
          output=$(./a.out r flashmemory 3)
          expected="data 999"
          if [ "$output" != "$expected" ]; then
            echo "Test case 3 failed: expected '$expected', got '$output'"
            exit 1
          fi

      - name: Test case 4 write longerTestString read 123456
        run: |
          ./a.out w flashmemory 4 "longerTestString" "123456"
          output=$(./a.out r flashmemory 4)
          expected="longerTestString 123456"
          if [ "$output" != "$expected" ]; then
            echo "Test case 4 failed: expected '$expected', got '$output'"
            exit 1
          fi

      - name: Test write to block 1 page 0 (ppn=8)
        run: |
          ./a.out w flashmemory 8 "data8" "20"

      - name: Test verify write to ppn=8
        run: |
          output=$(./a.out r flashmemory 8)
          expected="data8 20"
          if [ "$output" != "$expected" ]; then
            echo "Write to ppn=8 failed: expected '$expected', got '$output'"
            exit 1
          fi

      - name: Test erase block 0
        run: |
          ./a.out e flashmemory 0

      - name: Test verify ppn=0 is erased
        run: |
          output=$(./a.out r flashmemory 0)
          expected=""
          if [ "$output" != "$expected" ]; then
            echo "After erase, ppn=0 not erased: expected '$expected', got '$output'"
            exit 1
          fi

      - name: Test verify ppn=8 is preserved after block 0 erase
        run: |
          output=$(./a.out r flashmemory 8)
          expected="data8 20"
          if [ "$output" != "$expected" ]; then
            echo "After erase, ppn=8 changed: expected '$expected', got '$output'"
            exit 1
          fi

      - name: Test verify ppn=1 is erased
        run: |
          output=$(./a.out r flashmemory 1)
          expected=""
          if [ "$output" != "$expected" ]; then
            echo "After erase, ppn=1 not erased: expected '$expected', got '$output'"
            exit 1
          fi